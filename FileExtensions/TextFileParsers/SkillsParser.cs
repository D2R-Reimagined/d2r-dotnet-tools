using D2RReimaginedTools.Extensions;
using D2RReimaginedTools.Models;

namespace D2RReimaginedTools.TextFileParsers;

public static class SkillsParser
{
    public static async Task<IList<Skills>> GetEntries(string path)
    {
        var lines = (await File.ReadAllLinesAsync(path)).Skip(1); // Skip header
        return lines.Select(line => line.Split('\t'))
            .Select(columns => new Skills
            {
                Skill = columns[0],
                Id = columns[1],
                CharClass = columns[2],
                SkillDesc = columns[3],
                SrvStFunc = columns[4].ToNullableInt(),
                SrvDoFunc = columns[5].ToNullableInt(),
                SrvStopFunc = columns[6].ToNullableInt(),
                PrgStack = columns[7].ToNullableInt(),
                SrvPrgFunc1 = columns[8].ToNullableInt(),
                SrvPrgFunc2 = columns[9].ToNullableInt(),
                SrvPrgFunc3 = columns[10].ToNullableInt(),
                PrgCalc1 = columns[11],
                PrgCalc2 = columns[12],
                PrgCalc3 = columns[13],
                PrgDam = columns[14].ToNullableInt(),
                SrvMissile = columns[15],
                DecQuant = columns[16],
                Lob = columns[17].ToNullableInt(),
                SrvMissileA = columns[18],
                SrvMissileB = columns[19],
                SrvMissileC = columns[20],
                UseServerMissilesOnRemoteClients = columns[21],
                SrvOverlay = columns[22],
                AuraFilter = columns[23].ToNullableInt(),
                AuraState = columns[24],
                AuraTargetState = columns[25],
                AuraLenCalc = columns[26],
                AuraRangeCalc = columns[27],
                AuraStat1 = columns[28],
                AuraStatCalc1 = columns[29],
                AuraStat2 = columns[30],
                AuraStatCalc2 = columns[31],
                AuraStat3 = columns[32],
                AuraStatCalc3 = columns[33],
                AuraStat4 = columns[34],
                AuraStatCalc4 = columns[35],
                AuraStat5 = columns[36],
                AuraStatCalc5 = columns[37],
                AuraStat6 = columns[38],
                AuraStatCalc6 = columns[39],
                AuraEvent1 = columns[40],
                AuraEventFunc1 = columns[41],
                AuraEvent2 = columns[42],
                AuraEventFunc2 = columns[43],
                AuraEvent3 = columns[44],
                AuraEventFunc3 = columns[45],
                PassiveState = columns[46],
                PassiveIType = columns[47],
                PassiveReqWeaponCount = columns[48],
                PassiveStat1 = columns[49],
                PassiveCalc1 = columns[50],
                PassiveStat2 = columns[51],
                PassiveCalc2 = columns[52],
                PassiveStat3 = columns[53],
                PassiveCalc3 = columns[54],
                PassiveStat4 = columns[55],
                PassiveCalc4 = columns[56],
                PassiveStat5 = columns[57],
                PassiveCalc5 = columns[58],
                PassiveStat6 = columns[59],
                PassiveCalc6 = columns[60],
                PassiveStat7 = columns[61],
                PassiveCalc7 = columns[62],
                PassiveStat8 = columns[63],
                PassiveCalc8 = columns[64],
                PassiveStat9 = columns[65],
                PassiveCalc9 = columns[66],
                PassiveStat10 = columns[67],
                PassiveCalc10 = columns[68],
                PassiveStat11 = columns[69],
                PassiveCalc11 = columns[70],
                PassiveStat12 = columns[71],
                PassiveCalc12 = columns[72],
                PassiveStat13 = columns[73],
                PassiveCalc13 = columns[74],
                PassiveStat14 = columns[75],
                PassiveCalc14 = columns[76],
                Summon = columns[77],
                PetType = columns[78],
                PetMax = columns[79],
                SumMode = columns[80],
                SumSkill1 = columns[81],
                SumSk1Calc = columns[82],
                SumSkill2 = columns[83],
                SumSk2Calc = columns[84],
                SumSkill3 = columns[85],
                SumSk3Calc = columns[86],
                SumSkill4 = columns[87],
                SumSk4Calc = columns[88],
                SumSkill5 = columns[89],
                SumSk5Calc = columns[90],
                SumUmod = columns[91],
                SumOverlay = columns[92],
                StSuccessOnly = columns[93],
                StSound = columns[94],
                StSoundClass = columns[95],
                StSoundDelay = columns[96],
                WeaponSnd = columns[97],
                DoSound = columns[98],
                DoSoundA = columns[99],
                DoSoundB = columns[100],
                TgtOverlay = columns[101],
                TgtSound = columns[102],
                PrgOverlay = columns[103],
                PrgSound = columns[104],
                CastOverlay = columns[105],
                CltOverlayA = columns[106],
                CltOverlayB = columns[107],
                CltStFunc = columns[108],
                CltDoFunc = columns[109],
                CltStopFunc = columns[110],
                CltPrgFunc1 = columns[111],
                CltPrgFunc2 = columns[112],
                CltPrgFunc3 = columns[113],
                CltMissile = columns[114],
                CltMissileA = columns[115],
                CltMissileB = columns[116],
                CltMissileC = columns[117],
                CltMissileD = columns[118],
                CltCalc1 = columns[119],
                CltCalc1Desc = columns[120],
                CltCalc2 = columns[121],
                CltCalc2Desc = columns[122],
                CltCalc3 = columns[123],
                CltCalc3Desc = columns[124],
                Warp = columns[125],
                Immediate = columns[126],
                Enhanceable = columns[127],
                AttackRank = columns[128],
                NoAmmo = columns[129],
                Range = columns[130],
                WeapSel = columns[131],
                ITypeA1 = columns[132],
                ITypeA2 = columns[133],
                ITypeA3 = columns[134],
                ETypeA1 = columns[135],
                ETypeA2 = columns[136],
                ITypeB1 = columns[137],
                ITypeB2 = columns[138],
                ITypeB3 = columns[139],
                ETypeB1 = columns[140],
                ETypeB2 = columns[141],
                Anim = columns[142],
                SeqTrans = columns[143],
                MonAnim = columns[144],
                SeqNum = columns[145],
                SeqInput = columns[146],
                Durability = columns[147],
                UseAttackRate = columns[148],
                LineOfSight = columns[149],
                TargetableOnly = columns[150],
                SearchEnemyXY = columns[151],
                SearchEnemyNear = columns[152],
                SearchOpenXY = columns[153],
                SelectProc = columns[154],
                TargetCorpse = columns[155],
                TargetPet = columns[156],
                TargetAlly = columns[157],
                TargetItem = columns[158],
                AttackNoMana = columns[159],
                TgtPlaceCheck = columns[160],
                KeepCursorStateOnKill = columns[161],
                ContinueCastUnselected = columns[162],
                ClearSelectedOnHold = columns[163],
                ItemEffect = columns[164],
                ItemCltEffect = columns[165],
                ItemTgtDo = columns[166],
                ItemTarget = columns[167],
                ItemUseRestrict = columns[168],
                ItemCheckStart = columns[169],
                ItemCltCheckStart = columns[170],
                ItemCastSound = columns[171],
                ItemCastOverlay = columns[172],
                SkPoints = columns[173],
                ReqLevel = columns[174],
                MaxLvl = columns[175],
                ReqStr = columns[176],
                ReqDex = columns[177],
                ReqInt = columns[178],
                ReqVit = columns[179],
                ReqSkill1 = columns[180],
                ReqSkill2 = columns[181],
                ReqSkill3 = columns[182],
                Restrict = columns[183],
                State1 = columns[184],
                State2 = columns[185],
                State3 = columns[186],
                LocalDelay = columns[187],
                GlobalDelay = columns[188],
                LeftSkill = columns[189],
                RightSkill = columns[190],
                Repeat = columns[191],
                AlwaysHit = columns[192],
                UseManaOnDo = columns[193],
                StartMana = columns[194],
                MinMana = columns[195],
                ManaShift = columns[196],
                Mana = columns[197],
                LvlMana = columns[198],
                Interrupt = columns[199].ToBool(),
                InTown = columns[200],
                Aura = columns[201],
                Periodic = columns[202],
                PerDelay = columns[203],
                Finishing = columns[204],
                PrgChargesToCast = columns[205],
                PrgChargesConsumed = columns[206],
                Passive = columns[207],
                Progressive = columns[208],
                Scroll = columns[209],
                Calc1 = columns[210],
                Calc1Desc = columns[211],
                Calc2 = columns[212],
                Calc2Desc = columns[213],
                Calc3 = columns[214],
                Calc3Desc = columns[215],
                Calc4 = columns[216],
                Calc4Desc = columns[217],
                Calc5 = columns[218],
                Calc5Desc = columns[219],
                Calc6 = columns[220],
                Calc6Desc = columns[221],
                Param1 = columns[222],
                Param1Desc = columns[223],
                Param2 = columns[224],
                Param2Desc = columns[225],
                Param3 = columns[226],
                Param3Desc = columns[227],
                Param4 = columns[228],
                Param4Desc = columns[229],
                Param5 = columns[230],
                Param5Desc = columns[231],
                Param6 = columns[232],
                Param6Desc = columns[233],
                Param7 = columns[234],
                Param7Desc = columns[235],
                Param8 = columns[236],
                Param8Desc = columns[237],
                Param9 = columns[238],
                Param9Desc = columns[239],
                Param10 = columns[240],
                Param10Desc = columns[241],
                Param11 = columns[242],
                Param11Desc = columns[243],
                Param12 = columns[244],
                Param12Desc = columns[245],
                InGame = columns[246].ToBool(),
                ToHit = columns[247].ToNullableInt(),
                LevToHit = columns[248].ToNullableInt(),
                ToHitCalc = columns[249],
                ResultFlags = columns[250],
                HitFlags = columns[251],
                HitClass = columns[252].ToNullableInt(),
                Kick = columns[253].ToNullableInt(),
                HitShift = columns[254].ToNullableInt(),
                SrcDam = columns[255].ToNullableInt(),
                MinDam = columns[256].ToNullableInt(),
                MinLevDam1 = columns[257].ToNullableInt(),
                MinLevDam2 = columns[258].ToNullableInt(),
                MinLevDam3 = columns[259].ToNullableInt(),
                MinLevDam4 = columns[260].ToNullableInt(),
                MinLevDam5 = columns[261].ToNullableInt(),
                MaxDam = columns[262].ToNullableInt(),
                MaxLevDam1 = columns[263].ToNullableInt(),
                MaxLevDam2 = columns[264].ToNullableInt(),
                MaxLevDam3 = columns[265].ToNullableInt(),
                MaxLevDam4 = columns[266].ToNullableInt(),
                MaxLevDam5 = columns[267].ToNullableInt(),
                DmgSymPerCalc = columns[268],
                EType = columns[269],
                EMin = columns[270].ToNullableInt(),
                EMinLev1 = columns[271].ToNullableInt(),
                EMinLev2 = columns[272].ToNullableInt(),
                EMinLev3 = columns[273].ToNullableInt(),
                EMinLev4 = columns[274].ToNullableInt(),
                EMinLev5 = columns[275].ToNullableInt(),
                EMax = columns[276].ToNullableInt(),
                EMaxLev1 = columns[277].ToNullableInt(),
                EMaxLev2 = columns[278].ToNullableInt(),
                EMaxLev3 = columns[279].ToNullableInt(),
                EMaxLev4 = columns[280].ToNullableInt(),
                EMaxLev5 = columns[281].ToNullableInt(),
                EDmgSymPerCalc = columns[282],
                ELen = columns[283].ToNullableInt(),
                ELevLen1 = columns[284].ToNullableInt(),
                ELevLen2 = columns[285].ToNullableInt(),
                ELevLen3 = columns[286].ToNullableInt(),
                ELenSymPerCalc = columns[287],
                AIType = columns[288].ToNullableInt(),
                AIBonus = columns[289].ToNullableInt(),
                CostMult = columns[290].ToNullableInt(),
                CostAdd = columns[291].ToNullableInt(),

            })
            .ToList();
    }
}
